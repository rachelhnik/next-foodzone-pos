generator client {
  provider = "prisma-client-js"
 
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model addon_categories {
  id                     Int                      @id @default(autoincrement())
  name                   String
  is_required            Boolean                  @default(false)
  menu_addoncategories menu_addoncategories[]
  is_archived            Boolean                   @default(false)
}

model addons {
  id                     Int                      @id(map: "add_ons_pkey") @default(autoincrement())
  name                   String
  is_archived            Boolean                   @default(false) 
  addon_categories_id    Int?
  price                   Int?
  branches_addons        branches_addons[]
  orderlines orderlines[]
 
}

model branches {
  id              Int               @id @default(autoincrement())
  township_id     Int
  company_id      Int
  address         String
  is_archived            Boolean                   @default(false)
  companies       companies         @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  townships       townships         @relation(fields: [township_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  branches_addons branches_addons[]
  branches_menucategories_menus branches_menucategories_menus[]
  tables tables[]
  orders orders[]
}

model branches_addons {
  id           Int      @id @default(autoincrement())
  addon_id     Int
  branch_id    Int
  is_available Boolean? @default(true)
  addons       addons   @relation(fields: [addon_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  branches     branches @relation(fields: [branch_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model branches_menucategories_menus {
  id           Int     @id(map: "location_menus_pkey") @default(autoincrement())
  menu_id      Int?
  branch_id    Int?
  menucategory_id Int?
  is_available Boolean @default(true)
 
  menus        menus?   @relation(fields: [menu_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "location_menus_menu_id_fkey")
  menu_categories    menu_categories? @relation(fields: [menucategory_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  branches   branches? @relation(fields: [branch_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model companies {
  id       Int        @id @default(autoincrement())
  name     String
  is_archived            Boolean                   @default(false)
  branches branches[]
  users    users[]
}

model menu_categories {
  id                    Int                     @id(map: "menu_category_pkey") @default(autoincrement())
  name                  String
  is_archived            Boolean                   @default(false)
  branches_menucategories_menus branches_menucategories_menus[]
}

model menus {
  id                     Int                      @id @default(autoincrement())
  name                   String
 price                   Int
  asset_url              String?
  description            String?
 is_archived            Boolean                   @default(false)
  branches_menucategories_menus         branches_menucategories_menus[]
  menus_addoncats_addons menu_addoncategories[]
  orderlines orderlines[]
  
}

model menu_addoncategories {
  id                 Int             @id @default(autoincrement())
 menu  menus @relation(fields: [menu_id], references: [id])
 menu_id Int
 addon_categories addon_categories @relation(fields: [addoncategory_id],references: [id])
 addoncategory_id Int
 
}



model townships {
  id       Int        @id @default(autoincrement())
  name     String
  branches branches[]
}

model users {
  id         Int       @id @default(autoincrement())
  name       String
  email      String
  password   String
  company_id Int
  companies  companies @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  role Role
}

enum Role {
  admin 
  manager
}

model tables {
   id         Int       @id @default(autoincrement())
  name       String
  asset_url  String?
  branch_id  Int
   is_archived            Boolean                   @default(false)
  branches branches @relation(fields: [branch_id],references: [id], onDelete: NoAction , onUpdate: NoAction)
  orders orders[]
}

model orders {
  id           Int          @id @default(autoincrement())
  branch_id  Int
  table_id     Int
  order_status OrderStatus  @default(PENDING)
  is_paid      Boolean      @default(false)
  branches    branches    @relation(fields: [branch_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tables       tables       @relation(fields: [table_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  orderlines   orderlines[]
}

model orderlines {
  id        Int    @id @default(autoincrement())
  orders_id Int
  menus_id  Int
  addons_id Int
  orders    orders @relation(fields: [orders_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  menus     menus  @relation(fields: [menus_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  addons    addons @relation(fields: [addons_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum OrderStatus {
  PENDING
  PREPARING
  COMPLETE
}
